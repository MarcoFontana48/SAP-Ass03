Index: sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/RESTUserServiceControllerVerticleTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sap.ass02.infrastructure;\r\n\r\nimport io.vertx.core.json.JsonArray;\r\nimport io.vertx.core.json.JsonObject;\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport org.junit.jupiter.api.AfterEach;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.net.URI;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.util.Arrays;\r\n\r\nimport static org.junit.jupiter.api.Assertions.assertAll;\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\n\r\n//! INTEGRATION tests\r\nclass RESTUserServiceControllerVerticleTest {\r\n    private static final Logger LOGGER = LogManager.getLogger(RESTUserServiceControllerVerticleTest.class);\r\n    private static final int MINUTE = 60_000;\r\n    private static final int STATUS_CODE_OK = 200;\r\n    private final int port = 8080;\r\n    private final String host = \"localhost\";\r\n    private HttpClient client;\r\n    \r\n    @BeforeAll\r\n    static void setUpAll() throws InterruptedException, IOException {\r\n        LOGGER.trace(\"Tearing down containers before testing, if they are running...\");\r\n        Process process = startProcess(new File(\".\"), \"docker-compose\", \"down\");\r\n        process.waitFor();\r\n    }\r\n    \r\n    @BeforeEach\r\n    void setUp() throws IOException, InterruptedException {\r\n        startProcess(new File(\".\"), \"docker-compose\", \"up\");\r\n        Thread.sleep(5*MINUTE);\r\n        this.client = HttpClient.newHttpClient();\r\n    }\r\n    \r\n    @AfterEach\r\n    void tearDown() throws IOException, InterruptedException {\r\n         Process process = startProcess(new File(\".\"), \"docker-compose\", \"down\");\r\n         process.waitFor();\r\n    }\r\n    \r\n    @Test\r\n    void insertsUserCorrectly() throws IOException, InterruptedException {\r\n        // Send POST request\r\n        JsonObject json = new JsonObject()\r\n                .put(\"user_id\", \"1\")\r\n                .put(\"credit\", 100);\r\n        \r\n        HttpRequest postRequest = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user\"))\r\n                .header(\"Content-Type\", \"application/json\")\r\n                .POST(HttpRequest.BodyPublishers.ofString(json.toString()))\r\n                .build();\r\n        HttpResponse<String> postResponse = this.client.send(postRequest, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        assertEquals(STATUS_CODE_OK, postResponse.statusCode());\r\n    }\r\n    \r\n    @Test\r\n    void retrievesSingleUserCorrectly() throws IOException, InterruptedException {\r\n        // Send POST request\r\n        JsonObject json = new JsonObject()\r\n                .put(\"user_id\", \"1\")\r\n                .put(\"credit\", 100);\r\n        \r\n        HttpRequest postRequest = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user\"))\r\n                .header(\"Content-Type\", \"application/json\")\r\n                .POST(HttpRequest.BodyPublishers.ofString(json.toString()))\r\n                .build();\r\n        HttpResponse<String> postResponse = this.client.send(postRequest, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        // Send GET request\r\n        HttpRequest getRequest = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user/\"))\r\n                .GET()\r\n                .build();\r\n        HttpResponse<String> getResponse = this.client.send(getRequest, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        // Validate response\r\n        JsonArray expectedResponse = new JsonArray();\r\n        expectedResponse.add(JsonObject.of(\"user_id\", \"1\", \"credit\", 100));\r\n        \r\n        assertAll(\r\n                () -> assertEquals(STATUS_CODE_OK, getResponse.statusCode()),\r\n                () -> assertEquals(STATUS_CODE_OK, postResponse.statusCode()),\r\n                () -> assertEquals(expectedResponse.toString(), getResponse.body())\r\n        );\r\n    }\r\n    \r\n    @Test\r\n    void retrievesMultipleUsersCorrectly() throws IOException, InterruptedException {\r\n        // Send POST requests\r\n        JsonObject json1 = new JsonObject()\r\n                .put(\"user_id\", \"1\")\r\n                .put(\"credit\", 100);\r\n        JsonObject json2 = new JsonObject()\r\n                .put(\"user_id\", \"2\")\r\n                .put(\"credit\", 100);\r\n        \r\n        HttpRequest postRequest1 = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user\"))\r\n                .header(\"Content-Type\", \"application/json\")\r\n                .POST(HttpRequest.BodyPublishers.ofString(json1.toString()))\r\n                .build();\r\n        HttpResponse<String> postResponse1 = this.client.send(postRequest1, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        HttpRequest postRequest2 = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user\"))\r\n                .header(\"Content-Type\", \"application/json\")\r\n                .POST(HttpRequest.BodyPublishers.ofString(json2.toString()))\r\n                .build();\r\n        HttpResponse<String> postResponse2 = this.client.send(postRequest2, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        // Send GET request\r\n        HttpRequest getRequest = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user/\"))\r\n                .GET()\r\n                .build();\r\n        HttpResponse<String> getResponse = this.client.send(getRequest, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        // Validate response\r\n        JsonArray expectedResponse = new JsonArray();\r\n        JsonObject expectedResponseJsonObject1 = JsonObject.of(\"user_id\", \"1\", \"credit\", 100);\r\n        JsonObject expectedResponseJsonObject2 = JsonObject.of(\"user_id\", \"2\", \"credit\", 100);\r\n        expectedResponse.add(expectedResponseJsonObject1);\r\n        expectedResponse.add(expectedResponseJsonObject2);\r\n        JsonArray actualResponse = new JsonArray(getResponse.body());\r\n        if (actualResponse.getJsonObject(0).getString(\"user_id\").equals(\"2\")) {\r\n            JsonObject temp = actualResponse.getJsonObject(0);\r\n            actualResponse.set(0, actualResponse.getJsonObject(1));\r\n            actualResponse.set(1, temp);\r\n        } else {\r\n            actualResponse.set(0, actualResponse.getJsonObject(0));\r\n            actualResponse.set(1, actualResponse.getJsonObject(1));\r\n        }\r\n        \r\n        assertAll(\r\n                () -> assertEquals(STATUS_CODE_OK, getResponse.statusCode()),\r\n                () -> assertEquals(STATUS_CODE_OK, postResponse1.statusCode()),\r\n                () -> assertEquals(STATUS_CODE_OK, postResponse2.statusCode()),\r\n                () -> assertEquals(expectedResponse, actualResponse)\r\n        );\r\n    }\r\n    \r\n    @Test\r\n    void updatesUserCreditCorrectly() throws IOException, InterruptedException {\r\n        // Send POST request\r\n        JsonObject json = new JsonObject()\r\n                .put(\"user_id\", \"1\")\r\n                .put(\"credit\", 100);\r\n        \r\n        HttpRequest postRequest = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user\"))\r\n                .header(\"Content-Type\", \"application/json\")\r\n                .POST(HttpRequest.BodyPublishers.ofString(json.toString()))\r\n                .build();\r\n        HttpResponse<String> postResponse = this.client.send(postRequest, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        // Send PUT request\r\n        JsonObject json2 = new JsonObject()\r\n                .put(\"user_id\", \"1\")\r\n                .put(\"credit\", 55);\r\n        \r\n        HttpRequest putRequest = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user\"))\r\n                .header(\"Content-Type\", \"application/json\")\r\n                .PUT(HttpRequest.BodyPublishers.ofString(json2.toString()))\r\n                .build();\r\n        HttpResponse<String> putResponse = this.client.send(putRequest, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        // Send GET request\r\n        HttpRequest getRequest = HttpRequest.newBuilder()\r\n                .uri(URI.create(\"http://\" + this.host + \":\" + this.port + \"/app/user/\"))\r\n                .GET()\r\n                .build();\r\n        HttpResponse<String> getResponse = this.client.send(getRequest, HttpResponse.BodyHandlers.ofString());\r\n        \r\n        // Validate response\r\n        JsonArray expectedResponse = new JsonArray();\r\n        expectedResponse.add(JsonObject.of(\"user_id\", \"1\", \"credit\", 55));\r\n        \r\n        assertAll(\r\n                () -> assertEquals(STATUS_CODE_OK, getResponse.statusCode()),\r\n                () -> assertEquals(STATUS_CODE_OK, postResponse.statusCode()),\r\n                () -> assertEquals(STATUS_CODE_OK, putResponse.statusCode()),\r\n                () -> assertEquals(expectedResponse.toString(), getResponse.body())\r\n        );\r\n    }\r\n    \r\n    private static Process startProcess(File workDir, String... cmdLine) throws IOException {\r\n        LOGGER.trace(\"Starting process on dir '{}', with command line: '{}'\", workDir, Arrays.toString(cmdLine));\r\n        var prefix = RESTUserServiceControllerVerticleTest.class.getName() + \"-\" + Arrays.hashCode(cmdLine);\r\n        var stdOut = File.createTempFile(prefix + \"-stdout\", \".txt\");\r\n        stdOut.deleteOnExit();\r\n        var stdErr = File.createTempFile(prefix + \"-stderr\", \".txt\");\r\n        stdErr.deleteOnExit();\r\n        return new ProcessBuilder(cmdLine)\r\n                .redirectOutput(ProcessBuilder.Redirect.to(stdOut))\r\n                .redirectError(ProcessBuilder.Redirect.to(stdErr))\r\n                .directory(workDir)\r\n                .start();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/RESTUserServiceControllerVerticleTest.java b/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/RESTUserServiceControllerVerticleTest.java
--- a/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/RESTUserServiceControllerVerticleTest.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/RESTUserServiceControllerVerticleTest.java	(date 1739700988844)
@@ -20,7 +20,7 @@
 import static org.junit.jupiter.api.Assertions.assertAll;
 import static org.junit.jupiter.api.Assertions.assertEquals;
 
-//! INTEGRATION tests
+//! COMPONENT tests
 class RESTUserServiceControllerVerticleTest {
     private static final Logger LOGGER = LogManager.getLogger(RESTUserServiceControllerVerticleTest.class);
     private static final int MINUTE = 60_000;
Index: sap-ass03/ride-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sap.ass02.architecture;\r\n\r\nimport com.tngtech.archunit.core.domain.JavaClass;\r\nimport com.tngtech.archunit.core.domain.JavaClasses;\r\nimport com.tngtech.archunit.core.importer.ClassFileImporter;\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.lang.reflect.Modifier;\r\nimport java.util.HashSet;\r\nimport java.util.Set;\r\nimport java.util.stream.Collectors;\r\n\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\n\r\npublic class DistanceFromMainSequenceTest {\r\n    private static final Logger LOGGER = LogManager.getLogger(DistanceFromMainSequenceTest.class);\r\n    \r\n    @Test\r\n    public void evaluate_distance_from_main_sequence() {\r\n        double abstractness = this.evaluateAbstractness();\r\n        double instability = this.evaluateInstability();\r\n        double distanceFromMainSequence = abstractness + instability - 1;\r\n        LOGGER.info(\"Distance from main sequence: {}\", distanceFromMainSequence);\r\n        \r\n        // between (-1 and -1/3) or (1/3 and 1) --> fails   (1.333 delta)\r\n        // between -1/3 and 1/3                 --> passes  (0.666 delta)\r\n        assertEquals(0.0, distanceFromMainSequence, (double) 1 / 3);\r\n    }\r\n    \r\n    private double evaluateAbstractness() {\r\n        JavaClasses importedClasses = new ClassFileImporter().importPackages(\"sap.ass02\");\r\n        \r\n        Set<JavaClass> allClasses = new HashSet<>(importedClasses);\r\n        Set<JavaClass> abstractClasses = allClasses.stream()\r\n                .filter(javaClass -> Modifier.isAbstract(javaClass.reflect().getModifiers()) || Modifier.isInterface(javaClass.reflect().getModifiers()))\r\n                .collect(Collectors.toSet());\r\n        \r\n        return (double) abstractClasses.size() / allClasses.size();\r\n    }\r\n    \r\n    private double evaluateInstability() {\r\n        JavaClasses importedClasses = new ClassFileImporter().importPackages(\"sap.ass02\");\r\n        \r\n        Set<JavaClass> allClasses = new HashSet<>(importedClasses);\r\n        \r\n        double totalFanIn = allClasses.stream()\r\n                .mapToLong(javaClass -> javaClass.getDirectDependenciesToSelf().size())\r\n                .sum();\r\n        \r\n        double totalFanOut = allClasses.stream()\r\n                .mapToLong(javaClass -> javaClass.getDirectDependenciesFromSelf().size())\r\n                .sum();\r\n        \r\n        return totalFanOut / (totalFanIn + totalFanOut);\r\n    }\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/ride-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java b/sap-ass03/ride-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java
--- a/sap-ass03/ride-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/ride-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java	(date 1739700864282)
@@ -37,7 +37,11 @@
                 .filter(javaClass -> Modifier.isAbstract(javaClass.reflect().getModifiers()) || Modifier.isInterface(javaClass.reflect().getModifiers()))
                 .collect(Collectors.toSet());
         
-        return (double) abstractClasses.size() / allClasses.size();
+        Set<JavaClass> concreteClasses = allClasses.stream()
+                .filter(javaClass -> !Modifier.isAbstract(javaClass.reflect().getModifiers()) && !Modifier.isInterface(javaClass.reflect().getModifiers()))
+                .collect(Collectors.toSet());
+        
+        return (double) abstractClasses.size() / concreteClasses.size();
     }
     
     private double evaluateInstability() {
Index: sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/UserServiceComponentTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sap.ass02.infrastructure;\r\n\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\nimport sap.ass02.domain.application.UserService;\r\nimport sap.ass02.domain.User;\r\nimport sap.ass02.domain.dto.UserDTO;\r\nimport sap.ddd.Repository;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\nimport static org.mockito.Mockito.mock;\r\nimport static org.mockito.Mockito.when;\r\n\r\n//! COMPONENT tests\r\npublic class UserServiceComponentTest {\r\n    private final UserDTO user1 = new UserDTO(\"1\", 0, 0, 0);\r\n    private final UserDTO user2 = new UserDTO(\"2\", 0, 0, 0);\r\n    private UserService userService;\r\n    \r\n    @BeforeEach\r\n    public void setUp() {\r\n        Repository repository = mock(Repository.class);\r\n        when(repository.getUserById(this.user1.id())).thenReturn(Optional.of(this.user1));\r\n        when(repository.getAllUsers()).thenReturn(List.of(this.user1, this.user2));\r\n        this.userService = new UserService();\r\n        this.userService.attachRepository(repository);\r\n    }\r\n    \r\n    @Test\r\n    public void getUser() {\r\n        User actualUser = this.userService.getUser(this.user1.id());\r\n        User expectedUser = new User(this.user1.id(), this.user1.credit());\r\n        assertEquals(expectedUser, actualUser);\r\n    }\r\n    \r\n    @Test\r\n    public void getAllUsers() {\r\n        Iterable<User> actualUsers = this.userService.getUsers();\r\n        var expectedUsers = List.of(new User(this.user1.id(), this.user1.credit()), new User(this.user2.id(), this.user2.credit()));\r\n        assertEquals(expectedUsers, actualUsers);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/UserServiceComponentTest.java b/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/UserServiceComponentTest.java
--- a/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/UserServiceComponentTest.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/UserServiceComponentTest.java	(date 1739700957129)
@@ -14,7 +14,7 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
-//! COMPONENT tests
+//! INTEGRATION tests
 public class UserServiceComponentTest {
     private final UserDTO user1 = new UserDTO("1", 0, 0, 0);
     private final UserDTO user2 = new UserDTO("2", 0, 0, 0);
Index: sap-ass03/ride-service/src/main/java/sap/ass02/domain/Ride.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sap.ass02.domain;\r\n\r\nimport io.vertx.core.json.JsonObject;\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport sap.ass02.domain.dto.RideDTO;\r\nimport sap.ass02.domain.utils.JsonFieldKey;\r\nimport sap.ddd.Aggregate;\r\n\r\nimport java.sql.Date;\r\nimport java.util.Optional;\r\n\r\n/**\r\n * Represents a ride.\r\n */\r\npublic final class Ride implements Aggregate<RideDTO> {\r\n    private static final Logger LOGGER = LogManager.getLogger(Ride.class);\r\n    private final User user;\r\n    private final EBike bike;\r\n    private final String id;\r\n    private Date startedDate;\r\n    private Optional<Date> endDate;\r\n    private boolean ongoing;\r\n    \r\n    /**\r\n     * Instantiates a new ride.\r\n     * @param id The id of the ride.\r\n     * @param user The user.\r\n     * @param bike The bike.\r\n     */\r\n    public Ride(String id, User user, EBike bike) {\r\n        this.id = id;\r\n        this.startedDate = new Date(new java.util.Date().getTime());   //! sql date trunks the time part of the date, leaving only 'YYYY-MM-DD'\r\n        this.endDate = Optional.empty();\r\n        this.user = user;\r\n        this.bike = bike;\r\n    }\r\n    \r\n    /**\r\n     * Instantiates a new ride from a JSON object.\r\n     * @param asJsonObject The JSON object.\r\n     */\r\n    public Ride(JsonObject asJsonObject) {\r\n        this(\r\n                asJsonObject.getString(JsonFieldKey.RIDE_ID_KEY),\r\n                new User(asJsonObject.getJsonObject(JsonFieldKey.RIDE_USER_KEY)),\r\n                new EBikeImpl(asJsonObject.getJsonObject(JsonFieldKey.RIDE_EBIKE_KEY))\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Gets the id of the ride.\r\n     * @return The id of the ride.\r\n     */\r\n    public String getId() {\r\n        return this.id;\r\n    }\r\n    \r\n    /**\r\n     * Starts the ride.\r\n     */\r\n    public void start() {\r\n        this.ongoing = true;\r\n    }\r\n    \r\n    /**\r\n     * Ends the ride.\r\n     */\r\n    public void end() {\r\n        LOGGER.trace(\"Ending ride simulation for ride '{}'...\", this.id);\r\n        this.endDate = Optional.of(new Date(new java.util.Date().getTime()));\r\n        this.ongoing = false;\r\n    }\r\n    \r\n    /**\r\n     * Gets the started date.\r\n     * @return The started date.\r\n     */\r\n    public Date getStartedDate() {\r\n        return this.startedDate;\r\n    }\r\n    \r\n    /**\r\n     * Sets the started date.\r\n     * @param date The date.\r\n     */\r\n    public void setStartedDate(Date date) {\r\n        this.startedDate = (Date) date.clone();\r\n    }\r\n    \r\n    /**\r\n     * returns whether the ride is ongoing.\r\n     *\r\n     * @return true if the ride is ongoing, false otherwise\r\n     */\r\n    public boolean isOngoing() {\r\n        return this.ongoing;\r\n    }\r\n    \r\n    /**\r\n     * Sets whether the ride is ongoing.\r\n     *\r\n     * @param ongoing true if the ride is ongoing, false otherwise\r\n     */\r\n    public void setOngoing(boolean ongoing) {\r\n        this.ongoing = ongoing;\r\n    }\r\n    \r\n    /**\r\n     * Gets the end date.\r\n     * @return The end date.\r\n     */\r\n    public Optional<Date> getEndDate() {\r\n        return this.endDate;\r\n    }\r\n    \r\n    /**\r\n     * Sets the end date.\r\n     * @param date The date.\r\n     */\r\n    public void setEndDate(Date date) {\r\n        this.endDate = Optional.of(date);\r\n    }\r\n    \r\n    /**\r\n     * Sets the end date.\r\n     * @param date The date.\r\n     */\r\n    public void setEndDate(Optional<Date> date) {\r\n        this.endDate = date;\r\n    }\r\n    \r\n    /**\r\n     * Gets the user.\r\n     * @return The user.\r\n     */\r\n    public User getUser() {\r\n        return this.user;\r\n    }\r\n    \r\n    /**\r\n     * Gets the bike.\r\n     * @return The bike.\r\n     */\r\n    public EBike getBike() {\r\n        return this.bike;\r\n    }\r\n    \r\n    /**\r\n     * Converts the ride to a DTO.\r\n     * @return The DTO.\r\n     */\r\n    @Override\r\n    public RideDTO toDTO() {\r\n        return new RideDTO(\r\n                this.startedDate,\r\n                this.endDate,\r\n                this.user.toDTO(),\r\n                this.bike.toDTO(),\r\n                this.ongoing,\r\n                this.id);\r\n    }\r\n    \r\n    /**\r\n     * Converts the ride to a JSON object.\r\n     * @return The JSON object.\r\n     */\r\n    @Override\r\n    public JsonObject toJsonObject() {\r\n        JsonObject json = new JsonObject();\r\n        json.put(JsonFieldKey.RIDE_ID_KEY, this.id)\r\n                .put(JsonFieldKey.RIDE_USER_KEY, this.user.toJsonObject())\r\n                .put(JsonFieldKey.RIDE_EBIKE_KEY, this.bike.toJsonObject())\r\n                .put(JsonFieldKey.RIDE_START_DATE_KEY, this.startedDate.toString())\r\n                .put(JsonFieldKey.RIDE_ONGONING_KEY, this.ongoing)\r\n                .put(JsonFieldKey.RIDE_END_DATE_KEY, this.endDate.toString());\r\n        return json;\r\n    }\r\n    \r\n    /**\r\n     * Converts the ride to a JSON string.\r\n     * @return The JSON string.\r\n     */\r\n    @Override\r\n    public String toJsonString() {\r\n        return this.toJsonObject().encode();\r\n    }\r\n    \r\n    /**\r\n     * Converts the ride to a string.\r\n     */\r\n    public String toString() {\r\n        return \"{ id: \" + this.id + \", user: \" + this.user.getId() + \", bike: \" + this.bike.getBikeId() + \" }\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/ride-service/src/main/java/sap/ass02/domain/Ride.java b/sap-ass03/ride-service/src/main/java/sap/ass02/domain/Ride.java
--- a/sap-ass03/ride-service/src/main/java/sap/ass02/domain/Ride.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/ride-service/src/main/java/sap/ass02/domain/Ride.java	(date 1739705204610)
@@ -5,7 +5,7 @@
 import org.apache.logging.log4j.Logger;
 import sap.ass02.domain.dto.RideDTO;
 import sap.ass02.domain.utils.JsonFieldKey;
-import sap.ddd.Aggregate;
+import sap.ddd.AggregateRoot;
 
 import java.sql.Date;
 import java.util.Optional;
@@ -13,7 +13,7 @@
 /**
  * Represents a ride.
  */
-public final class Ride implements Aggregate<RideDTO> {
+public final class Ride implements AggregateRoot<RideDTO> {
     private static final Logger LOGGER = LogManager.getLogger(Ride.class);
     private final User user;
     private final EBike bike;
Index: sap-ass03/user-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sap.ass02.architecture;\r\n\r\nimport com.tngtech.archunit.core.domain.JavaClass;\r\nimport com.tngtech.archunit.core.domain.JavaClasses;\r\nimport com.tngtech.archunit.core.importer.ClassFileImporter;\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.lang.reflect.Modifier;\r\nimport java.util.HashSet;\r\nimport java.util.Set;\r\nimport java.util.stream.Collectors;\r\n\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\n\r\npublic class DistanceFromMainSequenceTest {\r\n    private static final Logger LOGGER = LogManager.getLogger(DistanceFromMainSequenceTest.class);\r\n    \r\n    @Test\r\n    public void evaluate_distance_from_main_sequence() {\r\n        double abstractness = this.evaluateAbstractness();\r\n        double instability = this.evaluateInstability();\r\n        double distanceFromMainSequence = abstractness + instability - 1;\r\n        LOGGER.info(\"Distance from main sequence: {}\", distanceFromMainSequence);\r\n        \r\n        // between (-1 and -1/3) or (1/3 and 1) --> fails   (1.333 delta)\r\n        // between -1/3 and 1/3                 --> passes  (0.666 delta)\r\n        assertEquals(0.0, distanceFromMainSequence, (double) 1 / 3);\r\n    }\r\n    \r\n    private double evaluateAbstractness() {\r\n        JavaClasses importedClasses = new ClassFileImporter().importPackages(\"sap.ass02\");\r\n        \r\n        Set<JavaClass> allClasses = new HashSet<>(importedClasses);\r\n        Set<JavaClass> abstractClasses = allClasses.stream()\r\n                .filter(javaClass -> Modifier.isAbstract(javaClass.reflect().getModifiers()) || Modifier.isInterface(javaClass.reflect().getModifiers()))\r\n                .collect(Collectors.toSet());\r\n        \r\n        return (double) abstractClasses.size() / allClasses.size();\r\n    }\r\n    \r\n    private double evaluateInstability() {\r\n        JavaClasses importedClasses = new ClassFileImporter().importPackages(\"sap.ass02\");\r\n        \r\n        Set<JavaClass> allClasses = new HashSet<>(importedClasses);\r\n        \r\n        double totalFanIn = allClasses.stream()\r\n                .mapToLong(javaClass -> javaClass.getDirectDependenciesToSelf().size())\r\n                .sum();\r\n        \r\n        double totalFanOut = allClasses.stream()\r\n                .mapToLong(javaClass -> javaClass.getDirectDependenciesFromSelf().size())\r\n                .sum();\r\n        \r\n        return totalFanOut / (totalFanIn + totalFanOut);\r\n    }\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/user-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java b/sap-ass03/user-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java
--- a/sap-ass03/user-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/user-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java	(date 1739700927168)
@@ -37,7 +37,11 @@
                 .filter(javaClass -> Modifier.isAbstract(javaClass.reflect().getModifiers()) || Modifier.isInterface(javaClass.reflect().getModifiers()))
                 .collect(Collectors.toSet());
         
-        return (double) abstractClasses.size() / allClasses.size();
+        Set<JavaClass> concreteClasses = allClasses.stream()
+                .filter(javaClass -> !Modifier.isAbstract(javaClass.reflect().getModifiers()) && !Modifier.isInterface(javaClass.reflect().getModifiers()))
+                .collect(Collectors.toSet());
+        
+        return (double) abstractClasses.size() / concreteClasses.size();
     }
     
     private double evaluateInstability() {
Index: sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/sql/SQLRepositoryAdapterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sap.ass02.infrastructure.persistence.sql;\r\n\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport org.junit.jupiter.api.AfterEach;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\nimport sap.ass02.domain.dto.*;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.Date;\r\nimport java.util.Arrays;\r\nimport java.util.Optional;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\n//! COMPONENT tests\r\nclass SQLRepositoryAdapterTest {\r\n    private static final Logger LOGGER = LogManager.getLogger(SQLRepositoryAdapterTest.class);\r\n    private static final int MINUTE = 60_000;\r\n    private final AbstractSQLRepositoryAdapter repository = new SQLRepositoryAdapter();\r\n    \r\n    @BeforeAll\r\n    static void setUpAll() throws InterruptedException, IOException {\r\n        LOGGER.trace(\"Tearing down containers before testing, if they are running...\");\r\n        Process process = startProcess(new File(\"..\"), \"docker\", \"stop\", \"ride-sql-db\");\r\n        process.waitFor();\r\n        process = startProcess(new File(\"..\"), \"docker\", \"rm\", \"ride-sql-db\");\r\n        process.waitFor();\r\n    }\r\n    \r\n    private static Process startProcess(File workDir, String... cmdLine) throws IOException {\r\n        LOGGER.trace(\"Starting process on dir '{}', with command line: '{}'\", workDir, Arrays.toString(cmdLine));\r\n        var prefix = SQLRepositoryAdapterTest.class.getName() + \"-\" + Arrays.hashCode(cmdLine);\r\n        var stdOut = File.createTempFile(prefix + \"-stdout\", \".txt\");\r\n        stdOut.deleteOnExit();\r\n        var stdErr = File.createTempFile(prefix + \"-stderr\", \".txt\");\r\n        stdErr.deleteOnExit();\r\n        return new ProcessBuilder(cmdLine)\r\n                .redirectOutput(ProcessBuilder.Redirect.to(stdOut))\r\n                .redirectError(ProcessBuilder.Redirect.to(stdErr))\r\n                .directory(workDir)\r\n                .start();\r\n    }\r\n    \r\n    @BeforeEach\r\n    void setUp() throws IOException, InterruptedException {\r\n        startProcess(new File(\"..\"), \"docker\", \"run\", \"-d\", \"-p\", \"3306:3306\", \"--name\", \"ride-sql-db\", \"ride-sql-db\");\r\n        Thread.sleep(5*MINUTE);\r\n        this.repository.connect(\"localhost\", \"3306\", \"ebike\", \"root\", \"password\");\r\n    }\r\n    \r\n    //! already in use in 'setUp' method\r\n//    @Test\r\n//    void connectsToDatabase() {\r\n//        assertDoesNotThrow(() -> this.repository.connect(\"localhost\", \"3306\", \"ebike\", \"root\", \"password\"));\r\n//    }\r\n    \r\n    @AfterEach\r\n    void tearDown() throws IOException, InterruptedException {\r\n//        Process process = startProcess(new File(\"..\"), \"docker\", \"stop\", \"ride-sql-db\");\r\n//        process.waitFor();\r\n//        process = startProcess(new File(\"..\"), \"docker\", \"rm\", \"ride-sql-db\");\r\n//        process.waitFor();\r\n    }\r\n    \r\n    @Test\r\n    void insertsRide() {\r\n        UserDTO user = new UserDTO(\"user_id\", -1, 0, 0);\r\n        EBikeDTO ebike = new EBikeDTO(\"ebike_id\", BikeStateDTO.AVAILABLE, new P2dDTO(0, 0), new V2dDTO(0, 0), 0, 0);\r\n        RideDTO ride = new RideDTO(\r\n                Date.valueOf(\"2021-01-01\"),\r\n                Optional.ofNullable(Date.valueOf(\"2021-01-02\")),\r\n                user,\r\n                ebike,\r\n                false,\r\n                \"1\"\r\n        );\r\n        this.repository.insertRide(ride);\r\n        this.repository.getRideById(\"1\").ifPresentOrElse(\r\n                r -> assertAll(\r\n                        () -> assertEquals(ride.startedDate(), r.startedDate()),\r\n                        () -> assertEquals(ride.endDate(), r.endDate()),\r\n                        () -> assertEquals(ride.user(), r.user()),\r\n                        () -> assertEquals(ride.ebike(), r.ebike()),\r\n                        () -> assertEquals(ride.ongoing(), r.ongoing()),\r\n                        () -> assertEquals(ride.id(), r.id())\r\n                ),\r\n                () -> fail(\"Ride not found\")\r\n        );\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/sql/SQLRepositoryAdapterTest.java b/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/sql/SQLRepositoryAdapterTest.java
--- a/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/sql/SQLRepositoryAdapterTest.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/sql/SQLRepositoryAdapterTest.java	(date 1739700903569)
@@ -16,7 +16,7 @@
 
 import static org.junit.jupiter.api.Assertions.*;
 
-//! COMPONENT tests
+//! INTEGRATION tests
 class SQLRepositoryAdapterTest {
     private static final Logger LOGGER = LogManager.getLogger(SQLRepositoryAdapterTest.class);
     private static final int MINUTE = 60_000;
Index: sap-ass03/ride-service/src/main/java/sap/ddd/Aggregate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/ride-service/src/main/java/sap/ddd/Aggregate.java b/sap-ass03/ride-service/src/main/java/sap/ddd/AggregateRoot.java
rename from sap-ass03/ride-service/src/main/java/sap/ddd/Aggregate.java
rename to sap-ass03/ride-service/src/main/java/sap/ddd/AggregateRoot.java
--- a/sap-ass03/ride-service/src/main/java/sap/ddd/Aggregate.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/ride-service/src/main/java/sap/ddd/AggregateRoot.java	(date 1739705197960)
@@ -1,4 +1,4 @@
 package sap.ddd;
 
-public interface Aggregate<T> extends Entity<T> {
+public interface AggregateRoot<T> extends Entity<T> {
 }
Index: sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/mongo/MongoRepositoryAdapterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sap.ass02.infrastructure.persistence.mongo;\r\n\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport org.junit.jupiter.api.AfterEach;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\nimport sap.ass02.domain.dto.*;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.Date;\r\nimport java.util.Arrays;\r\nimport java.util.Optional;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\n//! COMPONENT tests\r\nclass MongoRepositoryAdapterTest {\r\n    private static final Logger LOGGER = LogManager.getLogger(MongoRepositoryAdapterTest.class);\r\n    private static final int MINUTE = 60_000;\r\n    private final String testRideId = \"test_ride\";\r\n    private final String testUserId = \"test_user\";\r\n    private final String testEBikeId = \"test_ebike\";\r\n    private final AbstractMongoRepositoryAdapter repository = new MongoRepositoryAdapter();\r\n    private final UserDTO user = new UserDTO(this.testUserId, 100, 0, 0);\r\n    private final EBikeDTO ebike = new EBikeDTO(this.testEBikeId, BikeStateDTO.AVAILABLE, new P2dDTO(0, 0), new V2dDTO(0, 0), 0, 100);\r\n    \r\n    @BeforeAll\r\n    static void setUpAll() throws InterruptedException, IOException {\r\n        LOGGER.trace(\"Tearing down containers before testing, if they are running...\");\r\n        Process process = startProcess(new File(\"..\"), \"docker\", \"stop\", \"ride-mongo-db\");\r\n        process.waitFor();\r\n        process = startProcess(new File(\"..\"), \"docker\", \"rm\", \"ride-mongo-db\");\r\n        process.waitFor();\r\n    }\r\n    \r\n    private static Process startProcess(File workDir, String... cmdLine) throws IOException {\r\n        LOGGER.trace(\"Starting process on dir '{}', with command line: '{}'\", workDir, Arrays.toString(cmdLine));\r\n        var prefix = MongoRepositoryAdapter.class.getName() + \"-\" + Arrays.hashCode(cmdLine);\r\n        var stdOut = File.createTempFile(prefix + \"-stdout\", \".txt\");\r\n        stdOut.deleteOnExit();\r\n        var stdErr = File.createTempFile(prefix + \"-stderr\", \".txt\");\r\n        stdErr.deleteOnExit();\r\n        return new ProcessBuilder(cmdLine)\r\n                .redirectOutput(ProcessBuilder.Redirect.to(stdOut))\r\n                .redirectError(ProcessBuilder.Redirect.to(stdErr))\r\n                .directory(workDir)\r\n                .start();\r\n    }\r\n    \r\n    @BeforeEach\r\n    void setUp() throws IOException, InterruptedException {\r\n        startProcess(new File(\"..\"), \"docker\", \"run\", \"-d\", \"-p\", \"27017:27017\", \"--name\", \"user-mongo-db\", \"user-mongo-db\");\r\n        Thread.sleep(MINUTE / 2);\r\n        this.repository.connect(\"localhost\", \"27017\", \"ebike\", \"root\", \"password\");\r\n    }\r\n    \r\n    //! already in use in 'setUp' method\r\n//    @Test\r\n//    void connectsToDatabase() {\r\n//        assertDoesNotThrow(() -> this.repository.connect(\"localhost\", \"27017\", \"ebike\", \"root\", \"password\"));\r\n//    }\r\n    \r\n    @AfterEach\r\n    void tearDown() throws IOException, InterruptedException {\r\n        Process process = startProcess(new File(\"..\"), \"docker\", \"stop\", \"user-mongo-db\");\r\n        process.waitFor();\r\n        process = startProcess(new File(\"..\"), \"docker\", \"rm\", \"user-mongo-db\");\r\n        process.waitFor();\r\n    }\r\n    \r\n    @Test\r\n    void retrievesRideCorrectly() {\r\n        this.repository.insertRide(new RideDTO(\r\n                Date.valueOf(\"2021-01-01\"),\r\n                Optional.of(Date.valueOf(\"2021-01-02\")),\r\n                this.user,\r\n                this.ebike,\r\n                false,\r\n                this.testRideId\r\n        ));\r\n        \r\n        Optional<RideDTO> ride = this.repository.getRideById(this.testRideId);\r\n        \r\n        assertAll(\r\n                () -> assertTrue(ride.isPresent(), \"Ride should be present\"),\r\n                () -> assertEquals(this.testRideId, ride.get().id(), \"Ride id should be correct\"),\r\n                () -> assertEquals(Date.valueOf(\"2021-01-01\"), ride.get().startedDate(), \"Ride start date should be correct\"),\r\n                () -> assertEquals(Date.valueOf(\"2021-01-02\"), ride.get().endDate().get(), \"Ride end date should be correct\"),\r\n                () -> assertEquals(this.user, ride.get().user(), \"User should be correct\"),\r\n                () -> assertEquals(this.ebike, ride.get().ebike(), \"Ebike should be correct\")\r\n        );\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/mongo/MongoRepositoryAdapterTest.java b/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/mongo/MongoRepositoryAdapterTest.java
--- a/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/mongo/MongoRepositoryAdapterTest.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/mongo/MongoRepositoryAdapterTest.java	(date 1739700899127)
@@ -16,7 +16,7 @@
 
 import static org.junit.jupiter.api.Assertions.*;
 
-//! COMPONENT tests
+//! INTEGRATION tests
 class MongoRepositoryAdapterTest {
     private static final Logger LOGGER = LogManager.getLogger(MongoRepositoryAdapterTest.class);
     private static final int MINUTE = 60_000;
Index: sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/local/LocalJsonRepositoryAdapterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sap.ass02.infrastructure.persistence.local;\r\n\r\nimport org.junit.jupiter.api.AfterEach;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\nimport sap.ass02.domain.dto.*;\r\nimport sap.ddd.Repository;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.sql.Date;\r\nimport java.util.Optional;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\n//! COMPONENT tests\r\nclass LocalJsonRepositoryAdapterTest {\r\n    private final String databaseFileName = \"database\";\r\n    private final String databaseRideFileName = \"rides\";\r\n    private final String testRideId = \"test_ride\";\r\n    private final String testUserId = \"test_user\";\r\n    private final String testEBikeId = \"test_ebike\";\r\n    private Repository repo;\r\n    private final UserDTO user = new UserDTO(this.testUserId, 100, 0, 0);\r\n    private final EBikeDTO ebike = new EBikeDTO(this.testEBikeId, BikeStateDTO.AVAILABLE, new P2dDTO(0, 0), new V2dDTO(0, 0), 0, 100);\r\n    \r\n    @BeforeEach\r\n    void setUp() {\r\n        this.repo = new LocalJsonRepositoryAdapter();\r\n        this.repo.init();\r\n    }\r\n    \r\n    @AfterEach\r\n    void tearDown() {\r\n        try {\r\n            Files.deleteIfExists(Path.of(this.databaseFileName + File.separator + this.databaseRideFileName + File.separator + this.testRideId + \"_bis.json\"));\r\n            Files.deleteIfExists(Path.of(this.databaseFileName + File.separator + this.databaseRideFileName + File.separator + this.testRideId + \".json\"));\r\n            Files.deleteIfExists(Path.of(this.databaseFileName + File.separator + this.databaseRideFileName));\r\n            Files.deleteIfExists(Path.of(this.databaseFileName));\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    \r\n    @Test\r\n    void initializesRepositoryCorrectly() {\r\n        assertAll(\r\n                () -> assertTrue(Files.exists(Path.of(this.databaseFileName)), \"Database directory should exist\"),\r\n                () -> assertTrue(Files.exists(Path.of(this.databaseFileName + File.separator + this.databaseRideFileName)), \"Ride directory should exist\")\r\n        );\r\n    }\r\n    \r\n    @Test\r\n    void insertsRideCorrectly() {\r\n        this.repo.insertRide(new RideDTO(\r\n                Date.valueOf(\"2021-01-01\"),\r\n                Optional.of(Date.valueOf(\"2021-01-02\")),\r\n                this.user,\r\n                this.ebike,\r\n                false,\r\n                this.testRideId\r\n        ));\r\n        \r\n        assertAll(\r\n                () -> assertTrue(Files.exists(Path.of(this.databaseFileName + File.separator + this.databaseRideFileName + File.separator + this.testRideId + \".json\")), \"Ride file should exist\"\r\n                ));\r\n    }\r\n    \r\n    @Test\r\n    void retrievesRideCorrectly() {\r\n        this.repo.insertRide(new RideDTO(\r\n                Date.valueOf(\"2021-01-01\"),\r\n                Optional.of(Date.valueOf(\"2021-01-02\")),\r\n                this.user,\r\n                this.ebike,\r\n                false,\r\n                this.testRideId\r\n        ));\r\n        \r\n        Optional<RideDTO> ride = this.repo.getRideById(this.testRideId);\r\n        \r\n        assertAll(\r\n                () -> assertTrue(ride.isPresent(), \"Ride should be present\"),\r\n                () -> assertEquals(this.testRideId, ride.get().id(), \"Ride id should be correct\"),\r\n                () -> assertEquals(Date.valueOf(\"2021-01-01\"), ride.get().startedDate(), \"Ride start date should be correct\"),\r\n                () -> assertEquals(Date.valueOf(\"2021-01-02\"), ride.get().endDate().get(), \"Ride end date should be correct\"),\r\n                () -> assertEquals(this.user, ride.get().user(), \"stored user should be correct\"),\r\n                () -> assertEquals(this.ebike, ride.get().ebike(), \"stored ebike should be correct\")\r\n        );\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/local/LocalJsonRepositoryAdapterTest.java b/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/local/LocalJsonRepositoryAdapterTest.java
--- a/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/local/LocalJsonRepositoryAdapterTest.java	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/local/LocalJsonRepositoryAdapterTest.java	(date 1739700885033)
@@ -15,7 +15,7 @@
 
 import static org.junit.jupiter.api.Assertions.*;
 
-//! COMPONENT tests
+//! INTEGRATION tests
 class LocalJsonRepositoryAdapterTest {
     private final String databaseFileName = "database";
     private final String databaseRideFileName = "rides";
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c36b0785-90ba-474f-8b00-43f3f30ac046\" name=\"Changes\" comment=\"chore: update README.md\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/sap-ass03/README.md\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/sap-ass03/README.md\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ChangesViewManager\">\r\n    <option name=\"groupingKeys\">\r\n      <option value=\"module\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kubernetes Namespace\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"Kubernetes Pod\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"dev\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;MarcoFontana48&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/MarcoFontana48/SAP-Ass03.git&quot;,\r\n    &quot;accountId&quot;: &quot;3b849447-567b-4f65-a98f-0f4c48905646&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"jar://$PROJECT_DIR$/../../../../../../Program Files/Java/jdk-21.0.5/lib/src.zip!/java.base/java/lang/Enum.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"jar://$PROJECT_DIR$/../../../../../../Program Files/Java/jdk-21.0.5/lib/src.zip!/java.base/java/util/LinkedHashMap.java\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"KubernetesApiPersistence\">{}</component>\r\n  <component name=\"KubernetesApiProvider\">{\r\n  &quot;isMigrated&quot;: true\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\r\n  </component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2qZ7hUMGNf90iy2TjQ6rjFsePzp\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollToSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"sortByType\" value=\"true\" />\r\n    <option name=\"sortKey\" value=\"BY_TYPE\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.AdminClient.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.UserClient.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in admin-ui (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in admin-ui.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in api-gateway.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in bike-service (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in bike-service.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in configuration-server.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in ride-service (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in ride-service.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in user-service (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in user-service.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.All in user-ui.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.DependenciesTest (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.DependenciesTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.EBikeServiceComponentTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.EBikeTest.convertsToDTO.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.EBikeTest.convertsToJson.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.EBikeTest.testConstructor.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.LocalJsonRepositoryAdapterTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.MongoRepositoryAdapterTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.MongoRepositoryAdapterTest.retrievesRideCorrectly.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.insertsEBikeCorrectly.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.retrievesMultipleEBikesCorrectly.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.retrievesSingleEBikeCorrectly.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.updatesEBikeBatteryCorrectly.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RESTUserServiceControllerVerticleTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RESTUserServiceControllerVerticleTest.updatesUserCreditCorrectly.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RideServiceComponentTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RideTest.convertsToJson.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.SQLRepositoryAdapterTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.SQLRepositoryAdapterTest.insertsRide.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserServiceComponentTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.convertsToJSON.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.Whole project.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.java in bike-service.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.java in ride-service.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.java in user-service.executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.admin-ui [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.bike-service [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.sap-ass03 [clean].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.sap-ass03 [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.sap-ass03 [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:aggregate].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.sap-ass03 [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_directory_selection&quot;: &quot;C:/Users/marco/OneDrive/Universita/Software architecture and platforms/SAP-ASS03/sap-ass03/ride-service/src/test/java/sap/ass02/domain&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/marco/OneDrive/Universita/Software architecture and platforms/SAP-ASS03/sap-ass03/user-service/src/main/java/sap/ass02/domain/dto&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/marco/OneDrive/Universita/Software architecture and platforms/SAP-ASS03/SAP-ASS03/src/main/java/sap/ass03/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.254023&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"sap.ass02.domain.application\" />\r\n      <recent name=\"sap.ass02.domain\" />\r\n      <recent name=\"sap.ass02.domain.dto\" />\r\n      <recent name=\"sap.ddd\" />\r\n      <recent name=\"sap.ass02.infrastructure.persistence.local\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\\sap-ass03\\user-service\\src\\main\\java\\sap\\ass02\\domain\\dto\" />\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\\sap-ass03\\user-service\\src\\main\\java\\sap\\ass02\\domain\" />\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\\sap-ass03\\admin-ui\\src\\main\\java\\sap\\ass02\\domain\" />\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\\sap-ass03\\admin-ui\\src\\main\\java\\sap\\ass02\\domain\\dto\" />\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\\sap-ass03\\ride-service\\src\\main\\java\\sap\\ass02\\domain\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\\sap-ass03\" />\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\\SAP-ASS03\" />\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\" />\r\n      <recent name=\"C:\\Users\\marco\\OneDrive\\Universita\\Software architecture and platforms\\SAP-ASS03\\\" />\r\n    </key>\r\n    <key name=\"IntroduceConstantDialog.RECENTS_KEY\">\r\n      <recent name=\"sap.ass02.domain.ABike\" />\r\n    </key>\r\n    <key name=\"ExtractSuperBase.RECENT_KEYS\">\r\n      <recent name=\"sap.ass02.domain\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"sap.ass02.domain\" />\r\n      <recent name=\"sap.ass02.infrastructure.persistence\" />\r\n      <recent name=\"sap.ass02.infrastructure.persistence.local\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"sap.ass02.domain.dto\" />\r\n      <recent name=\"sap.ass02.domain\" />\r\n      <recent name=\"sap.ass02.infrastructure.persistence\" />\r\n      <recent name=\"sap.ddd\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.AdminClient\">\r\n    <configuration name=\"AdminClient\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"sap.ass02.infrastructure.AdminClient\" />\r\n      <module name=\"admin-ui\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"sap.ass02.infrastructure.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"All in user-service\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"user-service\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RESTUserServiceControllerVerticleTest.updatesUserCreditCorrectly\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"user-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"sap.ass02.infrastructure.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"sap.ass02.infrastructure\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"sap.ass02.infrastructure.RESTUserServiceControllerVerticleTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"updatesUserCreditCorrectly\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SQLRepositoryAdapterTest.insertsRide\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ride-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"sap.ass02.infrastructure.persistence.sql.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"sap.ass02.infrastructure.persistence.sql\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"sap.ass02.infrastructure.persistence.sql.SQLRepositoryAdapterTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"insertsRide\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <dir value=\"$PROJECT_DIR$/sap-ass03/ride-service/src/test/java\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"java in ride-service\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ride-service\" />\r\n      <option name=\"TEST_OBJECT\" value=\"directory\" />\r\n      <dir value=\"$PROJECT_DIR$/sap-ass03/ride-service/src/test/java\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ApiGatewayApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"api-gateway\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"sap.ass02.apigateway.spring.ApiGatewayApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.AdminClient\" />\r\n        <item itemvalue=\"JUnit.SQLRepositoryAdapterTest.insertsRide\" />\r\n        <item itemvalue=\"JUnit.java in ride-service\" />\r\n        <item itemvalue=\"JUnit.All in user-service\" />\r\n        <item itemvalue=\"JUnit.RESTUserServiceControllerVerticleTest.updatesUserCreditCorrectly\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.22562.218\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-IU-243.22562.218\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c36b0785-90ba-474f-8b00-43f3f30ac046\" name=\"Changes\" comment=\"\" />\r\n      <created>1734858372384</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1734858372384</updated>\r\n      <workItem from=\"1734858374139\" duration=\"558000\" />\r\n      <workItem from=\"1734859073997\" duration=\"241000\" />\r\n      <workItem from=\"1734859587723\" duration=\"9253000\" />\r\n      <workItem from=\"1734868926970\" duration=\"373000\" />\r\n      <workItem from=\"1734869311650\" duration=\"2620000\" />\r\n      <workItem from=\"1734881801321\" duration=\"13508000\" />\r\n      <workItem from=\"1734897616829\" duration=\"89000\" />\r\n      <workItem from=\"1734952694072\" duration=\"31000\" />\r\n      <workItem from=\"1735028412883\" duration=\"709000\" />\r\n      <workItem from=\"1735036336529\" duration=\"10000\" />\r\n      <workItem from=\"1735202169175\" duration=\"19660000\" />\r\n      <workItem from=\"1735235598780\" duration=\"5762000\" />\r\n      <workItem from=\"1735304126388\" duration=\"2564000\" />\r\n      <workItem from=\"1735388274772\" duration=\"13079000\" />\r\n      <workItem from=\"1735401638936\" duration=\"1256000\" />\r\n      <workItem from=\"1735404079784\" duration=\"3384000\" />\r\n      <workItem from=\"1735489171515\" duration=\"113000\" />\r\n      <workItem from=\"1736182636004\" duration=\"12732000\" />\r\n      <workItem from=\"1736238740467\" duration=\"13897000\" />\r\n      <workItem from=\"1736267506101\" duration=\"1037000\" />\r\n      <workItem from=\"1736276414868\" duration=\"12244000\" />\r\n      <workItem from=\"1736321369058\" duration=\"28756000\" />\r\n      <workItem from=\"1736359210049\" duration=\"5614000\" />\r\n      <workItem from=\"1736424794104\" duration=\"255000\" />\r\n      <workItem from=\"1736436380832\" duration=\"1484000\" />\r\n      <workItem from=\"1736438320069\" duration=\"13632000\" />\r\n      <workItem from=\"1736519830814\" duration=\"1709000\" />\r\n      <workItem from=\"1736580316156\" duration=\"20000\" />\r\n      <workItem from=\"1736593501707\" duration=\"6438000\" />\r\n      <workItem from=\"1736665710579\" duration=\"42344000\" />\r\n      <workItem from=\"1736756242302\" duration=\"13198000\" />\r\n      <workItem from=\"1736781115596\" duration=\"25000\" />\r\n      <workItem from=\"1736786807138\" duration=\"269000\" />\r\n      <workItem from=\"1736798016991\" duration=\"6054000\" />\r\n      <workItem from=\"1736839219267\" duration=\"34000\" />\r\n      <workItem from=\"1736864318390\" duration=\"86000\" />\r\n      <workItem from=\"1737042120677\" duration=\"1542000\" />\r\n      <workItem from=\"1737099035897\" duration=\"9000\" />\r\n      <workItem from=\"1737103008799\" duration=\"14000\" />\r\n      <workItem from=\"1737361711266\" duration=\"32000\" />\r\n      <workItem from=\"1737712001385\" duration=\"125000\" />\r\n      <workItem from=\"1737720800847\" duration=\"71000\" />\r\n      <workItem from=\"1739206041434\" duration=\"7289000\" />\r\n      <workItem from=\"1739216390514\" duration=\"190000\" />\r\n      <workItem from=\"1739296831592\" duration=\"31000\" />\r\n      <workItem from=\"1739481066559\" duration=\"8037000\" />\r\n      <workItem from=\"1739523444010\" duration=\"1990000\" />\r\n      <workItem from=\"1739525688309\" duration=\"111000\" />\r\n      <workItem from=\"1739617986273\" duration=\"1924000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"docs(admin-ui): add documentation to domain utils and properties\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734863245115</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734863245115</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"docs(admin-ui): add documentation to P2dDTO and V2dDTO methods\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734863474122</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734863474122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"docs(admin-ui): add documentation to DTOUtils and JsonUtils methods\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734863534514</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734863534514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"docs(admin-ui): fix documentation to JsonUtils method\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734863573400</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734863573400</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"docs(admin-ui): add documentation to domain elements\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734864133132</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734864133132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"docs(admin-ui): add documentation to api elements\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734864249957</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734864249957</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"docs(admin-ui): add documentation to controllers\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734864526864</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734864526864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"docs(admin-ui): add documentation to controllers items\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734864723462</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734864723462</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"docs(admin-ui): add documentation to controllers property\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734865005381</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734865005381</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"docs(admin-ui): add documentation to controller's WebController\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734865049526</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734865049526</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"docs(admin-ui): fix documentation of controller's AbstractAdminController\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734865117160</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734865117160</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"docs(admin-ui): add documentation of listener classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734865200571</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734865200571</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"docs(admin-ui): add documentation of listener classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734865347530</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734865347530</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"docs(admin-ui): add documentation of admin view classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734865639738</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734865639738</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"docs(admin-ui): add documentation of admin view dialog classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734865859364</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734865859364</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"docs(admin-ui): add documentation of admin view property classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734865986222</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734865986222</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"docs(admin-ui): add documentation of admin view\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734866135482</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734866135482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"docs(admin-ui): add documentation of AdminClient main class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734866163343</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734866163343</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"docs(admin-ui): add documentation of KafkaEBikeServiceEventManagerVerticle\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734866175271</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734866175271</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"docs(admin-ui): add documentation for DDD objects\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734866210143</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734866210143</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"docs(api-gateway): add documentation api-gateway classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734866409074</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734866409074</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"build: modified poms\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734868471527</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734868471527</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"build: add javadoc plugin to each pom.xml\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734868783578</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734868783578</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"build: add parent maven module\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734870705072</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734870705073</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"style: reindented pom.xml file to use only 2 spaced\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734871051853</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734871051853</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"docs(configuration-server): add docs to all classes of configuration server\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734871442226</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734871442226</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"chore(admin-ui): add tab space\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735224245343</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735224245343</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"chore(bike-service): add cqrs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735224270270</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735224270270</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"chore(ride-service): add cqrs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735224287722</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735224287722</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"chore(ride-service): add cqrs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735224302769</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735224302769</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"chore: add parent module to all modules\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735224333388</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735224333389</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"chore(user-service): add cqrs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735224355110</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735224355110</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"refactor: add AbstractBike class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736327653422</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736327653422</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"refactor: add AbstractBike class to admin ui\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736351941324</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736351941324</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"refactor: add initial user location logic\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736619132312</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736619132312</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"feat: add abike reaches user when requested\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736671091030</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736671091030</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"feat: add custom user location to be declare the moment the user is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736680174224</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736680174224</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"fix(bike-service): fix verticle service to correctly use standard service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736696509300</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736696509300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"fix(admin-ui): fix BikeState type in tests\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736696535169</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736696535169</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00044\" summary=\"refactor(bike-service): move kafka producer to user service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736705763476</created>\r\n      <option name=\"number\" value=\"00044\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736705763476</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00045\" summary=\"hotfix(bike-service): fix error in previous commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736705873249</created>\r\n      <option name=\"number\" value=\"00045\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736705873249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00046\" summary=\"refactor(user-service): move kafka to service\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736714012341</created>\r\n      <option name=\"number\" value=\"00046\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736714012341</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00047\" summary=\"refactor(ride-service): apply namespace to kubernetes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736805610138</created>\r\n      <option name=\"number\" value=\"00047\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736805610138</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00048\" summary=\"docs: update README\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736805653621</created>\r\n      <option name=\"number\" value=\"00048\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736805653621</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00049\" summary=\"docs: update README.md\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739216471016</created>\r\n      <option name=\"number\" value=\"00049\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739216471016</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00050\" summary=\"build: update kubernetes files\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739216502878</created>\r\n      <option name=\"number\" value=\"00050\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739216502878</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00051\" summary=\"build: update kubernetes files\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739525445727</created>\r\n      <option name=\"number\" value=\"00051\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739525445727</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00052\" summary=\"build: docker compose file now uses images from dockerhub instead of pre built images\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739618924957</created>\r\n      <option name=\"number\" value=\"00052\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739618924957</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00053\" summary=\"chore: update README.md\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739618941462</created>\r\n      <option name=\"number\" value=\"00053\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739618941462</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"54\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"build: add javadoc plugin to each pom.xml\" />\r\n    <MESSAGE value=\"build: add parent maven module\" />\r\n    <MESSAGE value=\"style: reindented pom.xml file to use only 2 spaced\" />\r\n    <MESSAGE value=\"docs(configuration-server): add docs to all classes of configuration server\" />\r\n    <MESSAGE value=\"chore(admin-ui): add tab space\" />\r\n    <MESSAGE value=\"chore(bike-service): add cqrs\" />\r\n    <MESSAGE value=\"chore(ride-service): add cqrs\" />\r\n    <MESSAGE value=\"chore: add parent module to all modules\" />\r\n    <MESSAGE value=\"chore(user-service): add cqrs\" />\r\n    <MESSAGE value=\"refactor: add AbstractBike class\" />\r\n    <MESSAGE value=\"refactor: add AbstractBike class to admin ui\" />\r\n    <MESSAGE value=\"refactor: add initial user location logic\" />\r\n    <MESSAGE value=\"feat: add abike reaches user when requested\" />\r\n    <MESSAGE value=\"feat: add custom user location to be declare the moment the user is created\" />\r\n    <MESSAGE value=\"fix(bike-service): fix verticle service to correctly use standard service\" />\r\n    <MESSAGE value=\"fix(admin-ui): fix BikeState type in tests\" />\r\n    <MESSAGE value=\"refactor(bike-service): move kafka producer to user service\" />\r\n    <MESSAGE value=\"hotfix(bike-service): fix error in previous commit\" />\r\n    <MESSAGE value=\"refactor(user-service): move kafka to service\" />\r\n    <MESSAGE value=\"refactor(ride-service): apply namespace to kubernetes\" />\r\n    <MESSAGE value=\"docs: update README\" />\r\n    <MESSAGE value=\"docs: update README.md\" />\r\n    <MESSAGE value=\"build: update kubernetes files\" />\r\n    <MESSAGE value=\"build: docker compose file now uses images from dockerhub instead of pre built images\" />\r\n    <MESSAGE value=\"chore: update README.md\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"chore: update README.md\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/sap/ebike/Main.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8de0e1805f1da5a4942d5fc165425da0de09559a)
+++ b/.idea/workspace.xml	(date 1739701364322)
@@ -6,7 +6,16 @@
   <component name="ChangeListManager">
     <list default="true" id="c36b0785-90ba-474f-8b00-43f3f30ac046" name="Changes" comment="chore: update README.md">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/sap-ass03/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/README.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/bike-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/bike-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/bike-service/src/test/java/sap/ass02/infrastructure/EBikeServiceComponentTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/bike-service/src/test/java/sap/ass02/infrastructure/EBikeServiceComponentTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/bike-service/src/test/java/sap/ass02/infrastructure/RESTEBikeServiceControllerVerticleTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/bike-service/src/test/java/sap/ass02/infrastructure/RESTEBikeServiceControllerVerticleTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/ride-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/ride-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/local/LocalJsonRepositoryAdapterTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/local/LocalJsonRepositoryAdapterTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/mongo/MongoRepositoryAdapterTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/mongo/MongoRepositoryAdapterTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/sql/SQLRepositoryAdapterTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/ride-service/src/test/java/sap/ass02/infrastructure/persistence/sql/SQLRepositoryAdapterTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/user-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/user-service/src/test/java/sap/ass02/architecture/DistanceFromMainSequenceTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/RESTUserServiceControllerVerticleTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/RESTUserServiceControllerVerticleTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/UserServiceComponentTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/sap-ass03/user-service/src/test/java/sap/ass02/infrastructure/UserServiceComponentTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -76,72 +85,73 @@
     <option name="sortByType" value="true" />
     <option name="sortKey" value="BY_TYPE" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.AdminClient.executor&quot;: &quot;Run&quot;,
-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
-    &quot;Application.UserClient.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in admin-ui (1).executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in admin-ui.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in api-gateway.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in bike-service (1).executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in bike-service.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in configuration-server.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in ride-service (1).executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in ride-service.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in user-service (1).executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in user-service.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.All in user-ui.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.DependenciesTest (1).executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.DependenciesTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.EBikeServiceComponentTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.EBikeTest.convertsToDTO.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.EBikeTest.convertsToJson.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.EBikeTest.testConstructor.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.LocalJsonRepositoryAdapterTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.MongoRepositoryAdapterTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.MongoRepositoryAdapterTest.retrievesRideCorrectly.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.insertsEBikeCorrectly.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.retrievesMultipleEBikesCorrectly.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.retrievesSingleEBikeCorrectly.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RESTEBikeServiceControllerVerticleTest.updatesEBikeBatteryCorrectly.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RESTUserServiceControllerVerticleTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RESTUserServiceControllerVerticleTest.updatesUserCreditCorrectly.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RideServiceComponentTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.RideTest.convertsToJson.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.SQLRepositoryAdapterTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.SQLRepositoryAdapterTest.insertsRide.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.UserServiceComponentTest.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.UserTest.convertsToJSON.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.Whole project.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.java in bike-service.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.java in ride-service.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.java in user-service.executor&quot;: &quot;Run&quot;,
-    &quot;Maven.admin-ui [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.bike-service [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.sap-ass03 [clean].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.sap-ass03 [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.sap-ass03 [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:aggregate].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.sap-ass03 [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;last_directory_selection&quot;: &quot;C:/Users/marco/OneDrive/Universita/Software architecture and platforms/SAP-ASS03/sap-ass03/ride-service/src/test/java/sap/ass02/domain&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/marco/OneDrive/Universita/Software architecture and platforms/SAP-ASS03/sap-ass03/user-service/src/main/java/sap/ass02/domain/dto&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/marco/OneDrive/Universita/Software architecture and platforms/SAP-ASS03/SAP-ASS03/src/main/java/sap/ass03/Main.java&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.254023&quot;,
-    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.AdminClient.executor": "Run",
+    "Application.Main.executor": "Run",
+    "Application.UserClient.executor": "Run",
+    "JUnit.All in admin-ui (1).executor": "Run",
+    "JUnit.All in admin-ui.executor": "Run",
+    "JUnit.All in api-gateway.executor": "Run",
+    "JUnit.All in bike-service (1).executor": "Run",
+    "JUnit.All in bike-service.executor": "Run",
+    "JUnit.All in configuration-server.executor": "Run",
+    "JUnit.All in ride-service (1).executor": "Run",
+    "JUnit.All in ride-service.executor": "Run",
+    "JUnit.All in user-service (1).executor": "Run",
+    "JUnit.All in user-service.executor": "Run",
+    "JUnit.All in user-ui.executor": "Run",
+    "JUnit.DependenciesTest (1).executor": "Run",
+    "JUnit.DependenciesTest.executor": "Run",
+    "JUnit.DistanceFromMainSequenceTest.executor": "Run",
+    "JUnit.EBikeServiceComponentTest.executor": "Run",
+    "JUnit.EBikeTest.convertsToDTO.executor": "Run",
+    "JUnit.EBikeTest.convertsToJson.executor": "Run",
+    "JUnit.EBikeTest.testConstructor.executor": "Run",
+    "JUnit.LocalJsonRepositoryAdapterTest.executor": "Run",
+    "JUnit.MongoRepositoryAdapterTest.executor": "Run",
+    "JUnit.MongoRepositoryAdapterTest.retrievesRideCorrectly.executor": "Run",
+    "JUnit.RESTEBikeServiceControllerVerticleTest.executor": "Run",
+    "JUnit.RESTEBikeServiceControllerVerticleTest.insertsEBikeCorrectly.executor": "Run",
+    "JUnit.RESTEBikeServiceControllerVerticleTest.retrievesMultipleEBikesCorrectly.executor": "Run",
+    "JUnit.RESTEBikeServiceControllerVerticleTest.retrievesSingleEBikeCorrectly.executor": "Run",
+    "JUnit.RESTEBikeServiceControllerVerticleTest.updatesEBikeBatteryCorrectly.executor": "Run",
+    "JUnit.RESTUserServiceControllerVerticleTest.executor": "Run",
+    "JUnit.RESTUserServiceControllerVerticleTest.updatesUserCreditCorrectly.executor": "Run",
+    "JUnit.RideServiceComponentTest.executor": "Run",
+    "JUnit.RideTest.convertsToJson.executor": "Run",
+    "JUnit.SQLRepositoryAdapterTest.executor": "Run",
+    "JUnit.SQLRepositoryAdapterTest.insertsRide.executor": "Run",
+    "JUnit.UserServiceComponentTest.executor": "Run",
+    "JUnit.UserTest.convertsToJSON.executor": "Run",
+    "JUnit.Whole project.executor": "Run",
+    "JUnit.java in bike-service.executor": "Run",
+    "JUnit.java in ride-service.executor": "Run",
+    "JUnit.java in user-service.executor": "Run",
+    "Maven.admin-ui [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor": "Run",
+    "Maven.bike-service [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor": "Run",
+    "Maven.sap-ass03 [clean].executor": "Run",
+    "Maven.sap-ass03 [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor": "Run",
+    "Maven.sap-ass03 [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:aggregate].executor": "Run",
+    "Maven.sap-ass03 [org.apache.maven.plugins:maven-javadoc-plugin:3.3.0:javadoc].executor": "Run",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "git-widget-placeholder": "master",
+    "last_directory_selection": "C:/Users/marco/OneDrive/Universita/Software architecture and platforms/SAP-ASS03/sap-ass03/ride-service/src/test/java/sap/ass02/domain",
+    "last_opened_file_path": "C:/Users/marco/Downloads/Assignment-01-Fontana/SAP-ASS01",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "onboarding.tips.debug.path": "C:/Users/marco/OneDrive/Universita/Software architecture and platforms/SAP-ASS03/SAP-ASS03/src/main/java/sap/ass03/Main.java",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.254023",
+    "run.code.analysis.last.selected.profile": "pProject Default",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CreateClassDialog.RecentsKey">
       <recent name="sap.ass02.domain.application" />
@@ -181,7 +191,7 @@
       <recent name="sap.ddd" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.AdminClient">
+  <component name="RunManager" selected="JUnit.DistanceFromMainSequenceTest">
     <configuration name="AdminClient" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="sap.ass02.infrastructure.AdminClient" />
       <module name="admin-ui" />
@@ -203,18 +213,17 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="RESTUserServiceControllerVerticleTest.updatesUserCreditCorrectly" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
-      <module name="user-service" />
+    <configuration name="DistanceFromMainSequenceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="bike-service" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="sap.ass02.infrastructure.*" />
+          <option name="PATTERN" value="sap.ass02.architecture.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <option name="PACKAGE_NAME" value="sap.ass02.infrastructure" />
-      <option name="MAIN_CLASS_NAME" value="sap.ass02.infrastructure.RESTUserServiceControllerVerticleTest" />
-      <option name="METHOD_NAME" value="updatesUserCreditCorrectly" />
-      <option name="TEST_OBJECT" value="method" />
+      <option name="PACKAGE_NAME" value="sap.ass02.architecture" />
+      <option name="MAIN_CLASS_NAME" value="sap.ass02.architecture.DistanceFromMainSequenceTest" />
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -253,11 +262,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="JUnit.DistanceFromMainSequenceTest" />
         <item itemvalue="Application.AdminClient" />
         <item itemvalue="JUnit.SQLRepositoryAdapterTest.insertsRide" />
         <item itemvalue="JUnit.java in ride-service" />
         <item itemvalue="JUnit.All in user-service" />
-        <item itemvalue="JUnit.RESTUserServiceControllerVerticleTest.updatesUserCreditCorrectly" />
       </list>
     </recent_temporary>
   </component>
@@ -326,14 +335,9 @@
       <workItem from="1739523444010" duration="1990000" />
       <workItem from="1739525688309" duration="111000" />
       <workItem from="1739617986273" duration="1924000" />
-    </task>
-    <task id="LOCAL-00005" summary="docs(admin-ui): add documentation to domain utils and properties">
-      <option name="closed" value="true" />
-      <created>1734863245115</created>
-      <option name="number" value="00005" />
-      <option name="presentableId" value="LOCAL-00005" />
-      <option name="project" value="LOCAL" />
-      <updated>1734863245115</updated>
+      <workItem from="1739619974669" duration="122000" />
+      <workItem from="1739697638828" duration="61000" />
+      <workItem from="1739699293057" duration="1870000" />
     </task>
     <task id="LOCAL-00006" summary="docs(admin-ui): add documentation to P2dDTO and V2dDTO methods">
       <option name="closed" value="true" />
@@ -719,7 +723,15 @@
       <option name="project" value="LOCAL" />
       <updated>1739618941462</updated>
     </task>
-    <option name="localTasksCounter" value="54" />
+    <task id="LOCAL-00054" summary="chore: update README.md">
+      <option name="closed" value="true" />
+      <created>1739620087541</created>
+      <option name="number" value="00054" />
+      <option name="presentableId" value="LOCAL-00054" />
+      <option name="project" value="LOCAL" />
+      <updated>1739620087542</updated>
+    </task>
+    <option name="localTasksCounter" value="55" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
